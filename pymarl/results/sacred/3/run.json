{
  "artifacts": [],
  "command": "my_main",
  "experiment": {
    "base_dir": "/home/lych/IJCAI22/EMC/pymarl/src",
    "dependencies": [
      "munch==2.5.0",
      "numpy==1.19.5",
      "PyYAML==5.4.1",
      "sacred==0.8.2",
      "torch==1.7.0"
    ],
    "mainfile": "main.py",
    "name": "pymarl",
    "repositories": [
      {
        "commit": "0f27b5532e3e54ff121e5ac41cde42b53911113d",
        "dirty": true,
        "url": "https://github.com/kikojay/EMC.git"
      },
      {
        "commit": "0f27b5532e3e54ff121e5ac41cde42b53911113d",
        "dirty": true,
        "url": "https://github.com/kikojay/EMC.git"
      },
      {
        "commit": "0f27b5532e3e54ff121e5ac41cde42b53911113d",
        "dirty": true,
        "url": "https://github.com/kikojay/EMC.git"
      }
    ],
    "sources": [
      [
        "main.py",
        "_sources/main_164592feb8a57f46e399a7eb15fc6652.py"
      ],
      [
        "run.py",
        "_sources/run_4cda1ba2b2ab15688345fca5f39750bc.py"
      ],
      [
        "utils/logging.py",
        "_sources/logging_dbae9b7001fb2435d067d770605d31e4.py"
      ]
    ]
  },
  "fail_trace": [
    "Traceback (most recent call last):\n",
    "  File \"/root/anaconda3/envs/EMV/lib/python3.6/site-packages/sacred/config/captured_function.py\", line 42, in captured_function\n    result = wrapped(*args, **kwargs)\n",
    "  File \"src/main.py\", line 36, in my_main\n    run(_run, config, _log)\n",
    "  File \"/home/lych/IJCAI22/EMC/pymarl/src/run.py\", line 66, in run\n    run_sequential(args=args, logger=logger)\n",
    "  File \"/home/lych/IJCAI22/EMC/pymarl/src/run.py\", line 246, in run_sequential\n    episode_batch = runner.run(test_mode=False)\n",
    "  File \"/home/lych/IJCAI22/EMC/pymarl/src/runners/episode_runner.py\", line 72, in run\n    reward, terminated, env_info = self.env.step(actions[0])\n",
    "  File \"/home/lych/IJCAI22/EMC/pymarl/src/envs/stag_hunt/stag_hunt.py\", line 207, in step\n    actions = np.expand_dims(np.asarray(actions, dtype=int_type), axis=1)\n",
    "  File \"/root/anaconda3/envs/EMV/lib/python3.6/site-packages/numpy/core/_asarray.py\", line 83, in asarray\n    return array(a, dtype, copy=False, order=order)\n",
    "  File \"/root/anaconda3/envs/EMV/lib/python3.6/site-packages/torch/tensor.py\", line 632, in __array__\n    return self.numpy().astype(dtype, copy=False)\n",
    "TypeError: can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.\n"
  ],
  "heartbeat": "2022-04-10T05:35:38.638215",
  "host": {
    "ENV": {},
    "cpu": "AMD Ryzen Threadripper 3990X 64-Core Processor",
    "gpus": {
      "driver_version": "460.56",
      "gpus": [
        {
          "model": "GeForce RTX 3070",
          "persistence_mode": false,
          "total_memory": 7982
        },
        {
          "model": "GeForce RTX 3090",
          "persistence_mode": false,
          "total_memory": 24265
        },
        {
          "model": "GeForce RTX 3070",
          "persistence_mode": false,
          "total_memory": 7982
        }
      ]
    },
    "hostname": "07584409239e",
    "os": [
      "Linux",
      "Linux-4.15.0-142-generic-x86_64-with-debian-buster-sid"
    ],
    "python_version": "3.6.13"
  },
  "meta": {
    "command": "my_main",
    "options": {
      "--beat-interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print-config": false,
      "--priority": null,
      "--queue": false,
      "--s3": null,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false,
      "COMMAND": null,
      "UPDATE": [
        "env_args.map_name=origin"
      ],
      "help": false,
      "with": true
    }
  },
  "resources": [],
  "result": null,
  "start_time": "2022-04-10T05:35:36.969410",
  "status": "FAILED",
  "stop_time": "2022-04-10T05:35:38.640404"
}